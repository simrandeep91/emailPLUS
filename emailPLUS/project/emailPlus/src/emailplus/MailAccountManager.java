/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MailAccountManager.java
 *
 * Created on 12 Aug, 2011, 2:16:00 AM
 */
package emailplus;


import emailplus.operations.DBOperations;
import emailplus.operations.ServerClientBean;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Vishal
 */
public class MailAccountManager extends javax.swing.JFrame implements TreeSelectionListener,MouseListener{

    /** Creates new form MailAccountManager */
    //public static JScrollPane p;
    public static JPanel p;
    public static int configid;
    public static ServerClientBean objBean;
    DBOperations obj=null;
    public static InboxPanel inobj=null;
    public MailAccountManager()
    {
        initComponents();
    }
    public MailAccountManager(int id) {
        initComponents();
        this.setCursor(Cursor.getDefaultCursor());
        //p=rightScrollPane;
        p=contentPanel;
        configid=id;
        obj=new DBOperations();
        objBean=obj.getConfigDetail(configid);
        MailBoxTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        //MailBoxTree.addTreeSelectionListener(this);
        MailBoxTree.addMouseListener(this);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        showInboxPanel();
        //rightScrollPane.setAutoscrolls(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainSplitPane = new javax.swing.JSplitPane();
        rightScrollPane = new javax.swing.JScrollPane();
        contentPanel = new javax.swing.JPanel();
        leftScrollPane = new javax.swing.JScrollPane();
        mnuPanel = new javax.swing.JPanel();
        btnCompose = new javax.swing.JButton();
        treeScrollPane = new javax.swing.JScrollPane();
        MailBoxTree = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainSplitPane.setDividerLocation(172);
        mainSplitPane.setAutoscrolls(true);

        rightScrollPane.setAutoscrolls(true);

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
        );

        rightScrollPane.setViewportView(contentPanel);

        mainSplitPane.setRightComponent(rightScrollPane);

        leftScrollPane.setMinimumSize(new java.awt.Dimension(150, 23));

        mnuPanel.setMinimumSize(new java.awt.Dimension(150, 0));

        btnCompose.setText("Compose Mail");
        btnCompose.setPreferredSize(new java.awt.Dimension(77, 27));
        btnCompose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComposeActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Mail Folders");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Inbox");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Sent Items");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("More");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Drafts");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Deleted Items");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Spams");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        MailBoxTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        MailBoxTree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MailBoxTree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MailBoxTreeKeyPressed(evt);
            }
        });
        treeScrollPane.setViewportView(MailBoxTree);

        javax.swing.GroupLayout mnuPanelLayout = new javax.swing.GroupLayout(mnuPanel);
        mnuPanel.setLayout(mnuPanelLayout);
        mnuPanelLayout.setHorizontalGroup(
            mnuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mnuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCompose, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
            .addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
        );
        mnuPanelLayout.setVerticalGroup(
            mnuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mnuPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(btnCompose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(treeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap())
        );

        leftScrollPane.setViewportView(mnuPanel);

        mainSplitPane.setLeftComponent(leftScrollPane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        miLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        miLogout.setText("Logout");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(miLogout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void showInboxPanel()
    {
        setTitle("Mail Account-Inbox");
        p.removeAll();
        inobj=new InboxPanel();
        inobj.setBounds(0, 0, 1081, 1103);
        p.add(inobj);
        p.setVisible(false);
        p.setVisible(true);
    }
    private void btnComposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComposeActionPerformed
        // TODO add your handling code here:
        setTitle("Mail Account-Compose");
        p.removeAll();
        ComposePanel comobj=new ComposePanel();
        comobj.setBounds(0, 0, p.getWidth(), p.getHeight());
        p.add(comobj);
        p.setVisible(false);
        p.setVisible(true);
    }//GEN-LAST:event_btnComposeActionPerformed

    private void MailBoxTreeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MailBoxTreeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        valueChanged(null);
    }//GEN-LAST:event_MailBoxTreeKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        if(inobj!=null)
        inobj.closeMailAccount();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        // TODO add your handling code here:
        if(inobj!=null)
        inobj.closeMailAccount();
        this.dispose();
    }//GEN-LAST:event_miLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
     public void valueChanged(TreeSelectionEvent e) {
         DefaultMutableTreeNode node=(DefaultMutableTreeNode)MailBoxTree.getLastSelectedPathComponent();
         if(node==null)
             return;
         String nodeInfo=(String)node.getUserObject();
         //System.out.println(nodeInfo);
         if(nodeInfo.equals("Inbox"))
         {
            p.removeAll();
            //this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            setTitle("Mail Account-Inbox");
            if(inobj==null)
                inobj=new InboxPanel();
            //System.out.println(objBean.getUsername());
            inobj.setBounds(0, 0, p.getWidth(), p.getHeight());
            p.add(inobj); 
         }
         else if(nodeInfo.equals("Sent Items"))
         {
                p.removeAll();
                setTitle("Mail Account-Sent Mails");
            SentMailsPanel smpobj=new SentMailsPanel();
            //System.out.println(objBean.getUsername());
            smpobj.setBounds(0, 0, p.getWidth(), p.getHeight());
            p.add(smpobj);
         }
         else if(nodeInfo.equals("Deleted Items"))
         {
                p.removeAll();
                setTitle("Mail Account-Deleted Mails");
            DeletedMailsPanel delobj=new DeletedMailsPanel();
            //System.out.println(objBean.getUsername());
            delobj.setBounds(0, 0, p.getWidth(), p.getHeight());
            p.add(delobj);
         }
         else if(nodeInfo.equals("Drafts"))
         {
                p.removeAll();
                setTitle("Mail Account-Drafts");
            DraftPanel drobj=new DraftPanel();
            //System.out.println(objBean.getUsername());
            drobj.setBounds(0, 0, p.getWidth(), p.getHeight());
            p.add(drobj);
         }
         else if(nodeInfo.equals("Spams"))
         {
                p.removeAll();
                setTitle("Mail Account-Spam Mails");
            SpamPanel spobj=new SpamPanel();
            //System.out.println(objBean.getUsername());
            spobj.setBounds(0, 0, p.getWidth(), p.getHeight());
            p.add(spobj);
         }
         p.setVisible(false);
         p.setVisible(true);
         this.setCursor(Cursor.getDefaultCursor());
    }
     public void mouseClicked(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public void mousePressed(MouseEvent e) {
        if(e.getClickCount()==2)
        {
            valueChanged(null);
        }
    }

    public void mouseReleased(MouseEvent e) {
    }
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MailAccountManager().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree MailBoxTree;
    private javax.swing.JButton btnCompose;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JSplitPane mainSplitPane;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JPanel mnuPanel;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JScrollPane treeScrollPane;
    // End of variables declaration//GEN-END:variables
}
