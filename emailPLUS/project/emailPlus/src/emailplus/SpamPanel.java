/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SpamPanel.java
 *
 * Created on 26 Aug, 2011, 9:34:29 AM
 */
package emailplus;

import emailplus.pop.ContentManager;
import emailplus.pop.MessageHeader;
import emailplus.pop.SimpleReceiver;
import java.awt.Cursor;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author deepika
 */
public class SpamPanel extends javax.swing.JPanel implements TableModelListener {

    /** Creates new form SpamPanel */
    private boolean[] flag;
    private ArrayList spamList=null;
    private AbstractTableStructure tableobj=null;
    private SimpleReceiver sr=null;
    private ContentManager contentobj=null;
    public SpamPanel() {
        initComponents();
        txtContent.setEditable(false);
        sr=InboxPanel.sr;
        contentobj=InboxPanel.contentobj;
        showMails();
    }
    void clear()
    {
                btnDelete.setEnabled(false);
                btnShow.setEnabled(false);
                btnShow.setEnabled(false);
                btnDelete.setEnabled(false);
                lblFrom.setText("From:");
                lblTo.setText("To:");
                lblSubject.setText("Subject:");
    }
    public void showMails()
    {
        spamList=sr.getSpamMessageList();
        if(spamList.isEmpty())
            {
                lblMessage.setText("there are no items to show in this folder");
                SpamMailTable.setEnabled(false);
                clear();
            }
        else
            {
                String header[]={"","From","Subject","Date"};
                /*Object data[][]=new Object[al.size()][3];
                for(int i=0;i<al.size();i++)
                {
                    MessageHeader objBean=(MessageHeader)al.get(i);
                    data[i][0]=objBean.getMessageFrom();
                    data[i][1]=objBean.getMessageSubject();
                    data[i][2]=objBean.getMessageSentDate();
                }
                InboxTable=new JTable(data,header);*/
                
                
                //creating new table according to user specified model
                flag=new boolean[spamList.size()];
                tableobj=new AbstractTableStructure(header, spamList);
                SpamMailTable=new JTable(tableobj);
                SpamMailTable.getColumnModel().getColumn(0).setMaxWidth(35);
                jScrollPane.setViewportView(SpamMailTable);
                SpamMailTable.getModel().addTableModelListener(this);
            }
    }

    public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
        int column = e.getColumn();
        TableModel model = (TableModel)e.getSource();
        flag[row] = (boolean)model.getValueAt(row, column);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        SpamMailTable = new javax.swing.JTable();
        lblFrom = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        btnShow = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();

        SpamMailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "From", "To", "Date"
            }
        ));
        jScrollPane.setViewportView(SpamMailTable);
        SpamMailTable.getColumnModel().getColumn(0).setMinWidth(45);
        SpamMailTable.getColumnModel().getColumn(0).setPreferredWidth(45);
        SpamMailTable.getColumnModel().getColumn(0).setMaxWidth(45);

        lblFrom.setText("From:");

        lblTo.setText("To:");

        lblSubject.setText("Subject:");

        btnShow.setText("Show Deatil");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane2.setViewportView(txtContent);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSubject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShow)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(416, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        for(int i=0;i<flag.length;i++)
        {
            if(flag[i])
            {
                spamList.remove(i);
            }
        }
        sr.deleteMails(flag);
        showMails();
        clear();
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        int i=SpamMailTable.getSelectedRow();
        if(i<0)
        {
            JOptionPane.showMessageDialog(this, "select a row from table", "Error", 2);
        }
        else
        {
            MessageHeader objBean=(MessageHeader)spamList.get(i);
            if(objBean.getSeenFlag())
                {
                    txtContent.setText(objBean.getMessageContent());
                    //showAttachedFiles(objBean);
                }
                else
                {
                    try
                    {
                        //contentobj=new ContentManager();
                        contentobj.getMessageContent(objBean,objBean.getEmailId());
                        //System.out.println(i+"  "+objBean.getEmailId());
                        //msg_content=sr.getMessageContent(i);
                        txtContent.setText(objBean.getMessageContent());
                        //showAttachedFiles(objBean);
                        objBean.setSeenFlag(true);
                    }
                    catch(Exception e)
                    {
                        System.out.println(e);
                    }
                }
                lblFrom.setText("From:   "+objBean.getMessageFrom());
                lblTo.setText("To:   "+objBean.getSenderEmailIdName());
                lblSubject.setText("Subject:   "+objBean.getMessageSubject());
                btnDelete.setEnabled(true);
                this.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_btnShowActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SpamMailTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnShow;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTo;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables
}
