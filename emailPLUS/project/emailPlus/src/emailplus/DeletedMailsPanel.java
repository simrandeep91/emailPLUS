/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DeletedMailsPanel.java
 *
 * Created on 21 Aug, 2011, 7:21:56 PM
 */
package emailplus;

import emailplus.operations.DBOperations;
import emailplus.operations.UserMailBean;
import emailplus.pop.MessageHeader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Vishal
 */
public class DeletedMailsPanel extends javax.swing.JPanel implements ListSelectionListener,TableModelListener{

    /** Creates new form DeletedMailsPanel */
    DBOperations obj=null;
    ArrayList al=null;
    int configId;
    private UserMailBean objBean=null;
    private int currentSelected;
    private AbstractTableStructure tableobj=null;
    private boolean[] flag={false};
    private ArrayList deleteMailList=null;
    public DeletedMailsPanel() {
        initComponents();
        txtContent.setEditable(false);
        btnForward.setEnabled(false);
        btnDelete.setEnabled(false);
        configId=MailAccountManager.configid;
        obj=new DBOperations();
        al=obj.getAllDeletedMailRecord(configId);
        showSentMails();
        DeleteMailsTable.getSelectionModel().addListSelectionListener(this);
        DeleteMailsTable.getModel().addTableModelListener(this);
    }
    public void showSentMails()
    {
        if(al.isEmpty())
        {
            
            lblMessage.setText("There are no items to show in this folders");
            DeleteMailsTable.setEnabled(false);
            return;
            //JOptionPane.showMessageDialog(this, "no record", "Message", 1);
        }
        String header[]={"","From","Subject","Sent Date"};
        /*Object data[][]=new Object[al.size()][3];
        for(int i=0;i<al.size();i++)
        {
            objBean=(UserMailBean)al.get(i);
            data[i][0]=objBean.getFrom();
            data[i][1]=objBean.getSubject();
            data[i][2]=objBean.getDate();
        }
        DeleteMailsTable=new JTable(new DefaultTableStructure(data,header));
        jScrollPane.setViewportView(DeleteMailsTable);
        p.setVisible(false);
        p.setVisible(true);*/
        flag=new boolean[al.size()];
        tableobj=new AbstractTableStructure(header, al);
                DeleteMailsTable=new JTable(tableobj);
                DeleteMailsTable.getColumnModel().getColumn(0).setMaxWidth(35);
                jScrollPane.setViewportView(DeleteMailsTable);

    }
    public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
        int column = e.getColumn();
        TableModel model = (TableModel)e.getSource();
        flag[row] = (boolean)(model.getValueAt(row, column));
        //System.out.println(row+" "+column+" "+data);
    }

    public void valueChanged(ListSelectionEvent e) {
        currentSelected=DeleteMailsTable.getSelectedRow();
        MessageHeader objBean=(MessageHeader)al.get(currentSelected);
        txtContent.setText(objBean.getMessageContent());
        lblFrom.setText("From:   "+objBean.getMessageFrom());
        lblTo.setText("To:   "+objBean.getMessageTo());
        lblSubject.setText("Subject:   "+objBean.getMessageSubject());
        btnDelete.setEnabled(true);
        btnForward.setEnabled(true);
        //System.out.println(i);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMessage = new javax.swing.JLabel();
        p = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        DeleteMailsTable = new javax.swing.JTable();
        lblFrom = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        btnForward = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        DeleteMailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "From", "To", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(DeleteMailsTable);
        DeleteMailsTable.getColumnModel().getColumn(0).setMinWidth(45);
        DeleteMailsTable.getColumnModel().getColumn(0).setPreferredWidth(45);
        DeleteMailsTable.getColumnModel().getColumn(0).setMaxWidth(45);

        lblFrom.setText("From:");

        lblTo.setText("To:");

        lblSubject.setText("Subject:");

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane2.setViewportView(txtContent);

        btnForward.setText("Forward");
        btnForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Forever");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pLayout = new javax.swing.GroupLayout(p);
        p.setLayout(pLayout);
        pLayout.setHorizontalGroup(
            pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblSubject, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pLayout.createSequentialGroup()
                        .addComponent(btnForward, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(140, 140, 140))
            .addGroup(pLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                .addContainerGap())
        );
        pLayout.setVerticalGroup(
            pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLayout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnForward)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
            .addComponent(p, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(p, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardActionPerformed
        // TODO add your handling code here:
        String subject=lblSubject.getText();
        String content=txtContent.getText();
        MailAccountManager.p.removeAll();
        ComposePanel comobj=new ComposePanel();
        comobj.setBounds(0, 0, 1081, 563);
        comobj.setMessage("", subject, content);
        MailAccountManager.p.add(comobj);
        MailAccountManager.p.setVisible(false);
        MailAccountManager.p.setVisible(true);
    }//GEN-LAST:event_btnForwardActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        deleteMailList =new ArrayList(); 
        for(int i=0;i<flag.length;i++)
        {
            MessageHeader mh=new MessageHeader();
            if(flag[i])
            {
                mh=(MessageHeader)al.get(i);
                deleteMailList.add(mh);
                al.remove(i);
            }
        }
        if(deleteMailList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "mark a row from table", "Error", 2);
            return;
        }
        if(obj.deleteMailRecord(deleteMailList).equals("deleted"))
        {
            MailAccountManager.p.removeAll();
            DeletedMailsPanel drobj=new DeletedMailsPanel();
            //System.out.println(objBean.getUsername());
            drobj.setBounds(0, 0, 1081,630 );
            MailAccountManager.p.add(drobj);
            MailAccountManager.p.setVisible(false);
            MailAccountManager.p.setVisible(true);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DeleteMailsTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnForward;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTo;
    private javax.swing.JPanel p;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables
}
